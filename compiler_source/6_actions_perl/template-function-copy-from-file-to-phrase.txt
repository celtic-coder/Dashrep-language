# no-space dashes-long-line  <new_line>

sub function__copy_from_file_to_phrase( ) {  <new_line>
$global_action_name_with_underscores = 'copy_from_file_to_phrase' ; <new_line>
combee **** template-check-operand-two-is-phrase-name **** comenn
combee **** template-specify-operand-one-is-file-name-for-reading **** comenn
combee **** template-open-file-for-reading **** comenn


$global_action_result = '' ;  <new_line>
$global_all_lines = '' ;  <new_line>
$global_line_ending = '' ;  <new_line>
$global_line_number = 0 ;  <new_line>
if ( not( exists( $global_dashrep_replacement{ 'yes hyphen-here or hyphen-here no hyphen-here indicate hyphen-here line hyphen-here endings' } ) ) ) {  <new_line>
    $global_dashrep_replacement{ 'yes hyphen-here or hyphen-here no hyphen-here indicate hyphen-here line hyphen-here endings' } = 'no' ;  <new_line>
}  <new_line>
if ( ( exists( $global_dashrep_replacement{ 'yes hyphen-here or hyphen-here no hyphen-here indicate hyphen-here line hyphen-here endings' } ) ) && ( $global_dashrep_replacement{ 'yes hyphen-here or hyphen-here no hyphen-here indicate hyphen-here line hyphen-here endings' } eq 'yes' ) ) {  <new_line>
    $global_line_ending = ' end hyphen-here of hyphen-here line hyphen-here here ' ;  <new_line>
} else {  <new_line>
    $global_line_ending = ' ' ;  <new_line>
}  <new_line>
while ( $global_input_line = <INFILE> ) {  <new_line>
    chomp( $global_input_line ) ;  <new_line>
    $global_input_line =~ s/[\t\f\n\r]+/ /g ;  <new_line>
    $global_input_line =~ s/^ +/ / ;  <new_line>
    $global_input_line =~ s/ +$/ / ;  <new_line>
    if ( ( $global_input_line ne '' ) || ( $global_line_ending ne ' ' ) ) {  <new_line>
        $global_all_lines .= $global_input_line . $global_line_ending ;  <new_line>
    }  <new_line>
}  <new_line>
$global_dashrep_replacement{ $global_operand_two } = $global_all_lines ;  <new_line>
close( INFILE ) ;  <new_line>
$global_target_text = $global_action_result ;  <new_line>

template-function-segment-ending
