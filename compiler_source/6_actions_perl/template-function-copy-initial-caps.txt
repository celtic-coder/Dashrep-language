template-interpreter-function-begin

sub function__copy_initial_caps( ) {  <new_line>

$global_action_result = '' ;  <new_line>
$global_source_phrase_name = $global_operand_one ;  <new_line>
$global_target_phrase_name = $global_operand_two ;  <new_line>
if ( not( exists( $global_dashrep_replacement{ $global_source_phrase_name } ) ) ) {  <new_line>
    $global_dashrep_replacement{ $global_source_phrase_name } = '' ;  <new_line>
}  <new_line>
$global_temp_text = $global_dashrep_replacement{ $global_source_phrase_name } ;  <new_line>
$global_temp_text =~ s/\n/ /sg ;  <new_line>
$global_temp_text =~ s/^ +// ;  <new_line>
$global_temp_text =~ s/ +$// ;  <new_line>
$global_remaining_text = $global_temp_text ;  <new_line>
$global_accumulated_text = '' ;  <new_line>
if ( $global_remaining_text =~ /^([a hyphen-here z])(.*)$/ ) {  <new_line>
    $global_character_to_capitalize = $1 ;  <new_line>
    $global_remaining_text = $2 ;  <new_line>
    $global_accumulated_text .= uc( $global_character_to_capitalize ) ;  <new_line>
}  <new_line>
while ( $global_remaining_text =~ /^(.*?) ([a hyphen-here z])(.*)$/ ) {  <new_line>
    $global_accumulated_text .= $1 ;  <new_line>
    $global_character_to_capitalize = $2 ;  <new_line>
    $global_remaining_text = $3 ;  <new_line>
    $global_accumulated_text .= ' ' . uc( $global_character_to_capitalize ) ;  <new_line>
}  <new_line>
$global_accumulated_text .= $global_remaining_text ;  <new_line>
$global_dashrep_replacement{ $global_target_phrase_name } = $global_accumulated_text ;  <new_line>

template-interpreter-function-end
