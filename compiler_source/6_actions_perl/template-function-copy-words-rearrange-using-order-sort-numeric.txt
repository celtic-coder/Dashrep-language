template-interpreter-function-begin

sub function__copy_words_rearrange_using_order_sort_numeric( ) {  <new_line>

$global_action_result = '' ;  <new_line>
if ( $global_dashrep_replacement{ $global_operand_three } =~ /[^0<character_hyphen>9\.\<character_hyphen> ]/ ) {  <new_line>
    $global_replacement_text = $global_text_begin . $global_action_result . $global_text_end ;  <new_line>
    return ;  <new_line>
}  <new_line>
$global_source_phrase_name = $global_operand_one ;  <new_line>
$global_target_phrase_name = $global_operand_two ;  <new_line>
# previously, next line removed instead of replaced:  <new_line>
$global_source_phrase_name =~ s/\n/ /g ;  <new_line>
if ( ( $global_source_phrase_name !~ /^[^ ]+$/ ) || ( not( exists( $global_dashrep_replacement{ $global_source_phrase_name } ) ) ) || ( not( defined( $global_dashrep_replacement{ $global_source_phrase_name } ) ) ) ) {  <new_line>
} else {  <new_line>
    $global_source_text = $global_dashrep_replacement{ $global_source_phrase_name } ;  <new_line>
    $global_source_text =~ s/\n/ /sg ;  <new_line>
    $global_source_text =~ s/^ +// ;  <new_line>
    $global_source_text =~ s/ +$// ;  <new_line>
    if ( $global_source_text =~ / / ) {  <new_line>
        @global_list_of_words = split( / +/ , $global_source_text ) ;  <new_line>
    } else  <new_line>
    {  <new_line>
        @global_list_of_words = ( ) ;  <new_line>
        $global_list_of_words[ 0 ] = $global_source_text ;  <new_line>
    }  <new_line>
    $global_list_indicating_sort_order_text_string = $global_dashrep_replacement{ $global_operand_three } ;  <new_line>
    $global_list_indicating_sort_order_text_string =~ s/\n/ /s ;  <new_line>
    $global_list_indicating_sort_order_text_string =~ s/^ +// ;  <new_line>
    $global_list_indicating_sort_order_text_string =~ s/ +$// ;  <new_line>
    @global_list_indicating_sort_order = split( / +/ , $global_list_indicating_sort_order_text_string ) ;  <new_line>
    @global_sort_order = sort { $a <=> $b } @global_list_indicating_sort_order ;  <new_line>
    $global_extra_words_without_sort_value = '' ;  <new_line>
    if ( $global_list_indicating_sort_order < $global_list_of_words ) {  <new_line>
        for ( $global_word_position = ( $global_list_indicating_sort_order + 2 ) ; $global_word_position <= ( $global_list_of_words + 1 ) ; $global_word_position ++ )  <new_line>
        {  <new_line>
            $global_extra_words_without_sort_value .= $global_list_of_words[ $global_word_position - 1 ] . ' ' ;  <new_line>
        }  <new_line>
    }  <new_line>
    %global_words_at_numeric_value = ( ) ;  <new_line>
    for ( $global_word_position = 1 ; $global_word_position <= ( $global_list_indicating_sort_order + 1 ) ; $global_word_position ++ ) {  <new_line>
        $global_numeric_value = $global_list_indicating_sort_order[ $global_word_position - 1 ] ;  <new_line>
        $global_words_at_numeric_value{ $global_numeric_value } .= $global_list_of_words[ $global_word_position - 1 ] . ' ' ;  <new_line>
    }  <new_line>
    $global_text_string = '' ;  <new_line>
    foreach $global_numeric_value ( @global_sort_order ) {  <new_line>
        if ( $global_words_at_numeric_value{ $global_numeric_value } =~ /[^ ]/ )  <new_line>
        {  <new_line>
            $global_text_string .= $global_words_at_numeric_value{ $global_numeric_value } . ' ' ;  <new_line>
            $global_words_at_numeric_value{ $global_numeric_value } = '' ;  <new_line>
        }  <new_line>
    }  <new_line>
    $global_text_string .= ' ' . $global_extra_words_without_sort_value ;  <new_line>
    $global_text_string =~ s/ +/ /g ;  <new_line>
    $global_text_string =~ s/ $// ;  <new_line>
    $global_dashrep_replacement{ $global_target_phrase_name } = $global_text_string ;  <new_line>
}  <new_line>

template-interpreter-function-end
