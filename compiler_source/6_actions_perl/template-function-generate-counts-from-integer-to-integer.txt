# no-space dashes-long-line  <new_line>
# function__generate_counts_from_integer_to_integer  <new_line>
#  <new_line>

*---
#  Input is $global_action_operand_one and $global_action_operand_two and $global_action_operand_three  <new_line>
#  Output is the definition of the phrase specified by $global_action_operand_three  <new_line>
<new_line>
---*

# todo: add check that count incrementing does not exceed 500000  <new_line>

sub function__generate_counts_from_integer_to_integer( ) {  <new_line>

$global_numeric_value_first = &function_parameterized__convert_numeric_text_into_numeric_value( $global_action_operand_one ) ;  <new_line>
$global_numeric_value_second = &function_parameterized__convert_numeric_text_into_numeric_value( $global_action_operand_two ) ;  <new_line>

if ( $global_numeric_value_first > $global_numeric_value_second ) {  <new_line>
$global_plus_or_minus_one = -1 ;  <new_line>
$global_count_range = $global_numeric_value_first - $global_numeric_value_second + 1 ;  <new_line>
} else {  <new_line>
$global_plus_or_minus_one = 1 ;  <new_line>
$global_count_range = $global_numeric_value_second - $global_numeric_value_first + 1 ;  <new_line>
}  <new_line>

code-get-or-put-phrase-definition-begin $global_action_operand_three code-get-or-put-phrase-definition-end = '' ;  <new_line>

for ( $global_counter = 1 ; $global_counter <= $global_count_range ; $global_counter ++ ) {  <new_line>
$global_count_number = $global_numeric_value_first + ( $global_plus_or_minus_one * ( $global_counter - 1 ) );  <new_line>

if ( $global_count_number == 0 ) {  <new_line>
$global_text_to_append = '0' ;  <new_line>
} else {  <new_line>
$global_text_to_append = sprintf( "%d" , $global_count_number ) ;  <new_line>
}  <new_line>

if ( $global_counter < $global_count_range ) {  <new_line>
$global_text_to_append .= ' ' ;  <new_line>
}  <new_line>

}  <new_line>

code-get-or-put-phrase-definition-begin $global_action_operand_three code-get-or-put-phrase-definition-end .= $global_text_to_append ;  <new_line>

return '' ;  <new_line>

template-function-segment-ending
