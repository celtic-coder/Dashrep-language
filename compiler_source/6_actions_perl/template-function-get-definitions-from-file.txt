template-interpreter-function-begin

sub function__get_definitions_from_file( ) {  <new_line>

template-interpreter-function-middle

    } elsif ( $global_action_name eq "get hyphen-here definitions hyphen-here from hyphen-here file" ) {  <new_line>
        if ( ( $global_source_filename eq "" ) || ( $global_operand_two ne "" ) ) {  <new_line>
            $global_possible_error_message .= " [warning, action " . $global_action_name . " has invalid operands " . $global_source_filename . " and " . $global_operand_two . "]" ;  <new_line>
        } elsif ( open ( INFILE , '<' . $global_source_filename ) ) {  <new_line>
            $global_possible_error_message = "" ;  <new_line>
        } else {  <new_line>
            if ( <character_hyphen>e $global_source_filename ) {  <new_line>
                $global_possible_error_message .= " [warning, file named " . $global_source_filename . " found, but could not be opened]" ;  <new_line>
            } else {  <new_line>
                $global_possible_error_message .= " [warning, file named " . $global_source_filename . " not found]" ;  <new_line>
            }  <new_line>
        }  <new_line>
        if ( $global_possible_error_message eq "" ) {  <new_line>
            $global_source_definitions = "" ;  <new_line>
            while ( $global_input_line = <INFILE> ) {  <new_line>
                chomp( $global_input_line ) ;  <new_line>
                $global_input_line =~ s/[\n\r\f\t]+/ /g ;  <new_line>
                if ( ( defined( $global_input_line ) ) && ( $global_input_line =~ /[^ ]/ ) ) {  <new_line>
                    $global_source_definitions .= $global_input_line . " " ;  <new_line>
                }  <new_line>
            }  <new_line>
            $global_numeric_return_value = &dashrep_import_replacements( $global_source_definitions ) ;  <new_line>
            if ( $global_dashrep_replacement{ "dashrep hyphen-here action hyphen-here trace hyphen-here on hyphen-here yes hyphen-here or hyphen-here no" } eq "yes" ) {  <new_line>
                $global_trace_log .= "{{trace; imported " . $global_numeric_return_value . " definitions from file: " . $global_source_filename . "}}\n" ;  <new_line>
            }  <new_line>
        } else {  <new_line>
            if ( $global_dashrep_replacement{ "dashrep hyphen-here warning hyphen-here trace hyphen-here on hyphen-here yes hyphen-here or hyphen-here no" } eq "yes" ) {  <new_line>
                $global_trace_log .= "{{trace; warning: " . $global_possible_error_message . "}}\n" ;  <new_line>
            }  <new_line>
        }  <new_line>
        close( INFILE ) ;  <new_line>

template-interpreter-function-end
