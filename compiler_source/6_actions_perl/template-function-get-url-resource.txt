# no-space dashes-long-line  <new_line>
# function__get_url_resource  <new_line>
#  <new_line>

*---
#  Inputs are the Dashrep phrases "url-source-for-single-resource-request" and "filename-target-for-single-resource-request"  <new_line>
#  Output is the file specified by the (above) filename and the phrase "dashrep-path-prefix-for-file-writing", plus messages from the CURL command are put into phrase "trace-results-from-curl" <new_line>
<new_line>
#  The -k switch reqests ignoring any  <new_line>
#  https certificate errors (which are not important  <new_line>
#  because the downloaded resources are public).  <new_line>
#  <new_line>
#  The -s switch requests silent mode, which turns  <new_line>
#  off both errors and progress info.  <new_line>
#  <new_line>
#  The -S switch requests that errors be shown.  <new_line>
---*

sub function__get_url_resource( ) {  <new_line>

# use local variable for command string for added security  <new_line>
my $command_string_without_pipe ;  <new_line>

$global_target_path_prefix = $global_dashrep_replacement{ 'dashrep-path-prefix-for-file-writing' } ;  <new_line>

if ( &function_parameterized__yes_or_no_valid_path_prefix( $global_target_path_prefix ) {  <new_line>
$global_action_result = 'dashrep_compiled_runtime_error__get_url_resource__invalid_path_prefix' ;  <new_line>
return '' ;  <new_line>
}  <new_line>

$global_url = $global_operand_one ;  <new_line>
$global_target_file_name = $global_operand_two ;  <new_line>
$global_target_file_full_path = $global_target_path_prefix . $global_target_file_name ;  <new_line>

# todo: pipe error output to ignored file because it shows progress indicator info; or, use flag to ignore progress indicator  <new_line>

$command_string_without_pipe = 'curl -k -s -S -o ' . $global_target_file_full_path . ' ' . $global_url ;  <new_line>

if ( not( $process_id = open( CURLCMD , $command_string_without_pipe . "|" ) ) ) {  <new_line>
    $global_accumulated_text = 'cannot_run_curl_command " . $command_string_without_pipe ;  <new_line>
} else {  <new_line>
    $global_accumulated_text = 'starting_curl_command ' . $command_string_without_pipe ;  <new_line>
    while( $input_line = <CURLCMD> ) {  <new_line>
        $global_accumulated_text .= ' ' . $input_line ;  <new_line>
    }  <new_line>
    $global_accumulated_text .= ' ending_curl_command' ;  <new_line>
    if ( not( close( CURLCMD ) ) ) {  <new_line>
        $global_accumulated_text .= ' cannot_close_handle_that_runs_curl_command' ;  <new_line>
    }  <new_line>
    chmod( 0600 , $global_target_file_full_path ) ;  <new_line>
}  <new_line>
$global_dashrep_replacement{ 'trace-results-from-curl' } = $global_accumulated_text ;  <new_line>

return '' ;  <new_line>

template-function-segment-ending
