template-interpreter-function-begin

sub function__numeric_vector_add_number( ) {  <new_line>

$global_single_value = 0 ;  <new_line>
$global_target_operand = $global_operand_three ;  <new_line>
$global_single_value = $global_operand_two + 0 ;  <new_line>
$global_list_of_x_values_as_text = $global_dashrep_replacement{ $global_operand_one } ;  <new_line>
$global_list_of_x_values_as_text =~ s/\n/ /s ;  <new_line>
$global_list_of_x_values_as_text =~ s/^ +// ;  <new_line>
$global_list_of_x_values_as_text =~ s/ +$// ;  <new_line>
@list_of_x_values = split( / +/ , $global_list_of_x_values_as_text ) ;  <new_line>
$global_dashrep_replacement{ $global_target_operand } = '' ;  <new_line>
if ( ( $global_action_name eq 'numeric hyphen-here vectors hyphen-here add' ) || ( $global_action_name eq 'numeric hyphen-here vectors hyphen-here multiply' ) || ( $global_action_name eq 'numeric hyphen-here vectors hyphen-here divide hyphen-here by' ) || ( $global_action_name eq 'numeric hyphen-here vectors hyphen-here from hyphen-here delta hyphen-here values hyphen-here calculate hyphen-here distances' ) )  <new_line>
{  <new_line>
    $global_list_of_y_values_as_text = $global_dashrep_replacement{ $global_operand_two } ;  <new_line>
    $global_list_of_y_values_as_text =~ s/\n/ /s ;  <new_line>
    $global_list_of_y_values_as_text =~ s/^ +// ;  <new_line>
    $global_list_of_y_values_as_text =~ s/ +$// ;  <new_line>
    @list_of_y_values = split( / +/ , $global_list_of_y_values_as_text ) ;  <new_line>
}  <new_line>
for( $global_pair_pointer = 0 ; $global_pair_pointer <= $global_#list_of_x_values ; $global_pair_pointer ++ )  <new_line>
{  <new_line>
    $global_numeric_value = $global_list_of_x_values[ $global_pair_pointer ] + $global_single_value + 0 ;  <new_line>
    }  <new_line>
    if ( $global_numeric_value == 0 )  <new_line>
    {  <new_line>
        $global_dashrep_replacement{ $global_target_operand } .= '0 ' ;  <new_line>
    } else  <new_line>
    {  <new_line>
        $global_dashrep_replacement{ $global_target_operand } .= sprintf( "%d" , $global_numeric_value ) . ' ' ;  <new_line>
    }  <new_line>
}  <new_line>
$global_dashrep_replacement{ $global_operand_three } =~ s/ +$// ;  <new_line>

template-interpreter-function-end
