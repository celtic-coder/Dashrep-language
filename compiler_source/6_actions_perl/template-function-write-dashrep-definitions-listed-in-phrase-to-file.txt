# no-space dashes-long-line  <new_line>

sub function__write_dashrep_definitions_listed_in_phrase_to_file( ) {  <new_line>
$global_action_name_with_underscores = 'write_dashrep_definitions_listed_in_phrase_to_file' ; <new_line>
template-return-if-no-permission-to-delete-overwrite-files
template-check-operand-one-is-phrase-not-empty
$global_target_file_name = $global_operand_two ;  <new_line>
template-open-file-for-writing-new-file

$global_action_result = '' ;  <new_line>
@global_list_of_phrases = split( /[ \n\r]+/ , $global_dashrep_replacement{ $global_operand_one } ) ;  <new_line>
if ( exists( $global_dashrep_replacement{ 'export hyphen-here defs hyphen-here all hyphen-here begin' } ) ) {  <new_line>
    $global_all_defs_begin = '[<character_hyphen>export hyphen-here defs hyphen-here all hyphen-here begin<character_hyphen>]' . "\n\n" ;  <new_line>
} else  <new_line>
{  <new_line>
    $global_all_defs_begin = '' ;  <new_line>
}  <new_line>
if ( exists( $global_dashrep_replacement{ 'export hyphen-here defs hyphen-here all hyphen-here end' } ) ) {  <new_line>
    $global_all_defs_end = '[<character_hyphen>export hyphen-here defs hyphen-here all hyphen-here end<character_hyphen>]' . "\n\n" ;  <new_line>
} else  <new_line>
{  <new_line>
    $global_all_defs_end = '' ;  <new_line>
}  <new_line>
if ( exists( $global_dashrep_replacement{ 'export hyphen-here defs hyphen-here phrase hyphen-here begin' } ) ) {  <new_line>
    $global_phrase_begin = '[<character_hyphen>export hyphen-here defs hyphen-here phrase hyphen-here begin<character_hyphen>] ' ;  <new_line>
} else  <new_line>
{  <new_line>
    $global_phrase_begin = '' ;  <new_line>
}  <new_line>
if ( exists( $global_dashrep_replacement{ 'export hyphen-here defs hyphen-here phrase hyphen-here end' } ) ) {  <new_line>
    $global_phrase_end = ' [<character_hyphen>export hyphen-here defs hyphen-here phrase hyphen-here end<character_hyphen>]' . "\n\n" ;  <new_line>
} else  <new_line>
{  <new_line>
    $global_phrase_end = '' ;  <new_line>
}  <new_line>
if ( exists( $global_dashrep_replacement{ 'export hyphen-here defs hyphen-here def hyphen-here begin' } ) ) {  <new_line>
    $global_def_begin = '[<character_hyphen>export hyphen-here defs hyphen-here def hyphen-here begin<character_hyphen>] ' ;  <new_line>
} else  <new_line>
{  <new_line>
    $global_def_begin = '' ;  <new_line>
}  <new_line>
if ( exists( $global_dashrep_replacement{ 'export hyphen-here defs hyphen-here def hyphen-here end' } ) ) {  <new_line>
    $global_def_end = ' [<character_hyphen>export hyphen-here defs hyphen-here def hyphen-here end<character_hyphen>]' . "\n\n" ;  <new_line>
} else  <new_line>
{  <new_line>
    $global_def_end = '' ;  <new_line>
}  <new_line>

$global_counter = 0 ;  <new_line>

foreach $global_phrase_name ( @global_list_of_phrases ) {  <new_line>
    if ( ( defined( $global_phrase_name ) ) && ( $global_phrase_name =~ /[^ ]/ ) && ( exists( $global_dashrep_replacement{ $global_phrase_name } ) ) && ( $global_phrase_name ne 'four hyphen-here hyphens' ) ) {  <new_line>
        print OUTFILE $global_phrase_name . "\n" ;  <new_line>
        $global_counter ++ ;  <new_line>
    }  <new_line>
}  <new_line>

$global_yes_or_no_file_opened_for_writing = $global_no ;  <new_line>
close( OUTFILE ) ;  <new_line>

template-runtime-code-protect-target-file

template-function-segment-ending
