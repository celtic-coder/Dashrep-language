template-interpreter-function-begin

sub function__write_gathered_listed_items_to_end_of_file( ) {  <new_line>

template-interpreter-function-middle

$global_accumulated_text = "" ;  <new_line>
if ( $global_target_filename eq "" )  <new_line>
{  <new_line>
    $global_possible_error_message .= " [warning, action " . $global_action_name . " has invalid operands " . $global_source_phrase_name . " and " . $global_target_filename . "]" ;  <new_line>
} elsif ( $global_dashrep_replacement{ "yes hyphen-here or hyphen-here no hyphen-here permission hyphen-here to hyphen-here append hyphen-here to hyphen-here files" } ne "yes" )  <new_line>
{  <new_line>
    $global_trace_log .= "{{trace; attempt to copy from phrase " . $global_source_phrase_name . " to end of file " . $global_target_filename . "}}\n" ;  <new_line>
    $global_possible_error_message .= " [warning, do not have permission to append to files]" ;  <new_line>
} elsif ( open ( OUTFILE , '>>' . $global_target_filename ) )  <new_line>
{  <new_line>
    $global_possible_error_message .= "" ;  <new_line>
} else  <new_line>
{  <new_line>
    $global_possible_error_message .= " [warning, file named " . $global_target_filename . " could not be opened for writing]" ;  <new_line>
}  <new_line>
if ( $global_possible_error_message eq "" )  <new_line>
{  <new_line>
    $global_entry_begin = $global_dashrep_replacement{ "dashrep hyphen-here gather hyphen-here tag hyphen-here begin" } ;  <new_line>
    $global_entry_end = $global_dashrep_replacement{ "dashrep hyphen-here gather hyphen-here tag hyphen-here end" } ;  <new_line>
    $global_entry_unique = $global_dashrep_replacement{ "dashrep hyphen-here gather hyphen-here tag hyphen-here unique" } ;  <new_line>
    @list_of_tag_names = ( ) ;  <new_line>
    if ( ( exists( $global_dashrep_replacement{ "dashrep hyphen-here gathered hyphen-here tag hyphen-here names hyphen-here in hyphen-here sequence" } ) ) && ( $global_dashrep_replacement{ "dashrep hyphen-here gathered hyphen-here tag hyphen-here names hyphen-here in hyphen-here sequence" } =~ /[^ ]/ ) )  <new_line>
        @list_of_tag_names = split( /[ \n\r]+/ , $global_dashrep_replacement{ "dashrep hyphen-here gathered hyphen-here tag hyphen-here names hyphen-here in hyphen-here sequence" } ) ;  <new_line>
    }  <new_line>
    @list_of_unique_values = ( ) ;  <new_line>
    if ( exists( $global_dashrep_replacement{ $global_operand_one } ) )  <new_line>
        @list_of_unique_values = split( /[ \n\r]+/ , $global_dashrep_replacement{ $global_operand_one } ) ;  <new_line>
    }  <new_line>
    foreach $global_unique_value ( @list_of_unique_values )  <new_line>
        $global_accumulated_text .= $global_entry_begin . "\n" ;  <new_line>
        $global_accumulated_text .= $global_entry_unique . " " . $global_unique_value . "\n" ;  <new_line>
        foreach $global_tag_name ( @list_of_tag_names )  <new_line>
            $global_phrase_name = $global_tag_name . "<character_hyphen>value hyphen-here for hyphen-here unique hyphen-here id<character_hyphen>" . $global_unique_value ;  <new_line>
            if ( exists( $global_dashrep_replacement{ $global_phrase_name } ) )  <new_line>
                $global_accumulated_text .= $global_tag_name . " " . $global_dashrep_replacement{ $global_phrase_name } . "\n" ;  <new_line>
            }  <new_line>
        }  <new_line>
        $global_accumulated_text .= $global_entry_end . "\n\n" ;  <new_line>
    }  <new_line>
    print OUTFILE $global_accumulated_text . "\n" ;  <new_line>

    if ( $global_dashrep_replacement{ "dashrep hyphen-here action hyphen-here trace hyphen-here on hyphen-here yes hyphen-here or hyphen-here no" } eq "yes" )  <new_line>
        $global_trace_log .= "{{trace; wrote gathered selected items listed in phrase " . $global_source_phrase_name . " to end of file " . $global_target_filename . "}}\n" ;  <new_line>
    }  <new_line>
} else  <new_line>
{  <new_line>
    if ( $global_dashrep_replacement{ "dashrep hyphen-here warning hyphen-here trace hyphen-here on hyphen-here yes hyphen-here or hyphen-here no" } eq "yes" )  <new_line>
        $global_trace_log .= "{{trace; warning: " . $global_possible_error_message . "}}\n" ;  <new_line>
    }  <new_line>
}  <new_line>
close( OUTFILE ) ;  <new_line>
if ( not( chmod( $global_file_write_protection_mode , $global_target_filename ) ) )  <new_line>
{  <new_line>
    if ( $global_dashrep_replacement{ "dashrep hyphen-here warning hyphen-here trace hyphen-here on hyphen-here yes hyphen-here or hyphen-here no" } eq "yes" )  <new_line>
        $global_trace_log .= "{{trace; warning: protection of output file " . $global_target_filename . "  not successful}}\n" ;  <new_line>
        $global_trace_log .= "{{trace; warning: " . $global_possible_error_message . "}}\n" ;  <new_line>
    }  <new_line>
}  <new_line>

template-interpreter-function-end
