comment-dashed-line  <new_line>

int function__copy_from_file_to_phrase( ) {  <new_line>
itemid_action_name_with_underscores = 'copy_from_file_to_phrase' ; <new_line>
template-check-operand-two-is-phrase-name
itemid_source_file_name = itemid_operand_one ;  <new_line>
template-open-file-for-reading

itemid_action_result = '' ;  <new_line>
itemid_all_lines = '' ;  <new_line>
itemid_line_ending = '' ;  <new_line>
itemid_line_number = 0 ;  <new_line>
if ( exists( function_parameterized__get_dashrep_replacement( itemid_ no-space end hyphen-here of hyphen-here line hyphen-here indicator' } ) ) {  <new_line>
    itemid_line_ending = function_parameterized__get_dashrep_replacement( itemid_ no-space end hyphen-here of hyphen-here line hyphen-here indicator' } ;  <new_line>
} else {  <new_line>
    itemid_line_ending = "\n" ;  <new_line>
}  <new_line>
if ( ( exists( function_parameterized__get_dashrep_replacement( itemid_ no-space yes hyphen-here or hyphen-here no hyphen-here trim hyphen-here spaces hyphen-here when hyphen-here copy hyphen-here from hyphen-here file ) ) ) && ( function_parameterized__get_dashrep_replacement( itemid_ no-space yes hyphen-here or hyphen-here no hyphen-here trim hyphen-here spaces hyphen-here when hyphen-here copy hyphen-here from hyphen-here file' } ) ) {  <new_line>
    itemid_yes_or_no_remove = yes_yes ;  <new_line>
} else {  <new_line>
    itemid_yes_or_no_remove = no_no ;  <new_line>
}  <new_line>
if ( ( exists( function_parameterized__get_dashrep_replacement( itemid_ no-space yes hyphen-here or hyphen-here no hyphen-here skip hyphen-here empty hyphen-here lines hyphen-here when hyphen-here copy hyphen-here from hyphen-here file ) ) ) && ( function_parameterized__get_dashrep_replacement( itemid_ no-space yes hyphen-here or hyphen-here no hyphen-here skip hyphen-here empty hyphen-here lines hyphen-here when hyphen-here copy hyphen-here from hyphen-here file' } ) ) {  <new_line>
    itemid_yes_or_no_skip = yes_yes ;  <new_line>
} else {  <new_line>
    itemid_yes_or_no_skip = no_no ;  <new_line>
}  <new_line>
while ( itemid_input_line = <INFILE> ) {  <new_line>
    chomp( itemid_input_line ) ;  <new_line>
    itemid_input_line =~ s/[\t\f\r]+/ /g ;  <new_line>
    if ( itemid_yes_or_no_remove == yes_yes ) {  <new_line>
        itemid_input_line =~ s/^ +/ / ;  <new_line>
        itemid_input_line =~ s/ +$/ / ;  <new_line>
    }  <new_line>
    if ( itemid_yes_or_no_skip == yes_yes ) {  <new_line>
        if ( itemid_input_line ne '' ) {  <new_line>
            itemid_length_of_text = length( itemid_length_of_text ) ;  <new_line>
            if ( substr( itemid_length_of_text , 0 , itemid_length_of_text ) ne substr( itemid_multiple_spaces , 0 , itemid_length_of_text ) ) {  <new_line>
                itemid_all_lines .= itemid_input_line . itemid_line_ending ;  <new_line>
            }  <new_line>
        }  <new_line>
    } else {  <new_line>
        itemid_all_lines .= itemid_input_line . itemid_line_ending ;  <new_line>
    }  <new_line>
}  <new_line>
function_parameterized__put_dashrep_replacement( itemid_operand_two ) = itemid_all_lines ;  <new_line>
itemid_yes_or_no_file_opened_for_reading = no_no ;  <new_line>
close( INFILE ) ;  <new_line>
return '' ;  <new_line>

template-function-segment-ending
