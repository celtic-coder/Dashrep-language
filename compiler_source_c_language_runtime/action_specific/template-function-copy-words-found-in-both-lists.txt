comment-dashed-line  <new_line>

int function__copy_words_found_in_both_lists( ) {  <new_line>
itemid_action_name_with_underscores = 'copy_words_found_in_both_lists' ; <new_line>
template-check-operand-one-is-phrase-name
template-check-operand-two-is-phrase-name
template-check-operand-three-is-phrase-name


// todo: rewrite this code to use new functions: point_to_words_in_operand_one and point_to_words_in_operand_two  <new_line>
// also use: itemid_yes_found_word{ }  <new_line>

itemid_action_result = '' ;  <new_line>

if ( exists( function_parameterized__get_dashrep_replacement( itemid_operand_one ) ) ) {  <new_line>
    itemid_text_list_loop = function_parameterized__get_dashrep_replacement( itemid_operand_one ) ;  <new_line>
} else {  <new_line>
    itemid_text_list_loop = '' ;  <new_line>
}  <new_line>

if ( exists( function_parameterized__get_dashrep_replacement( itemid_operand_two ) ) ) {  <new_line>
    itemid_text_list_key = function_parameterized__get_dashrep_replacement( itemid_operand_two ) ;  <new_line>
} else {  <new_line>
    itemid_text_list_key = '' ;  <new_line>
}  <new_line>
itemid_destination_phrase = itemid_operand_three ;  <new_line>

itemid_text_list_key =~ s/\n/ /sg ;  <new_line>
itemid_text_list_key =~ s/^ +// ;  <new_line>
itemid_text_list_key =~ s/ +$// ;  <new_line>
if ( itemid_text_list_key eq '' ) {  <new_line>
    @global_list_of_key_values = ( ) ;  <new_line>
} else {  <new_line>
    @global_list_of_key_values = split( / +/ , itemid_text_list_key ) ;  <new_line>
}  <new_line>
%global_listed_word = ( ) ;  <new_line>
foreach itemid_word ( @global_list_of_key_values ) {  <new_line>
    itemid_listed_word{ itemid_word } = 1 ;  <new_line>
}  <new_line>
itemid_text_list_loop =~ s/\n/ /sg ;  <new_line>
itemid_text_list_loop =~ s/^ +// ;  <new_line>
itemid_text_list_loop =~ s/ +$// ;  <new_line>
if ( itemid_text_list_loop eq '' ) {  <new_line>
    @global_list_of_loop_words = ( ) ;  <new_line>
} else {  <new_line>
    @global_list_of_loop_words = split( / +/ , itemid_text_list_loop ) ;  <new_line>
}  <new_line>
itemid_length_of_loop_list = c_run_count_of_words_in_list_of_loop_words + 1 ;  <new_line>
%global_occurrence_count_for_word = ( ) ;  <new_line>
itemid_number_of_unique_words = 0 ;  <new_line>
@global_unique_word_at_position = ( ) ;  <new_line>
itemid_unique_word_at_position[ 0 ] = '' ;  <new_line>
itemid_text_list_of_unique_word_pointers = '' ;  <new_line>
itemid_result_word_list = '' ;  <new_line>
if ( itemid_length_of_loop_list > 0 ) {  <new_line>
    for ( itemid_pointer = 1 ; itemid_pointer <= itemid_length_of_loop_list ; itemid_pointer ++ ) {  <new_line>
        itemid_word = itemid_list_of_loop_words[ itemid_pointer - 1 ] ;  <new_line>
        itemid_occurrence_count_for_word{ itemid_word } ++ ;  <new_line>
        if ( ( exists( itemid_listed_word{ itemid_word } ) ) && ( itemid_occurrence_count_for_word{ itemid_word } == 1 ) ) {  <new_line>
            itemid_result_word_list .= itemid_word . ' ' ;  <new_line>
        }  <new_line>
    }  <new_line>
}  <new_line>
itemid_text_list_of_unique_word_pointers =~ s/ +$// ;  <new_line>
itemid_result_word_list =~ s/ +$// ;  <new_line>
function_parameterized__put_dashrep_replacement( itemid_destination_phrase } = itemid_result_word_list ;  <new_line>
return '' ;  <new_line>

template-function-segment-ending
